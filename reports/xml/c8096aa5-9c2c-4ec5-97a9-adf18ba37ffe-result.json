{"name": "test_CaseReport", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: //span[contains(text(),'案件上报')]定位元素超时，请检查定为语句是否正确，或者尝试其他定位方式", "trace": "self = <po.case_report.cas_report_page.CaseReport object at 0x0000020C446FC850>\nlocator = \"//span[contains(text(),'案件上报')]\"\n\n    def get_element(self,locator):\n        '''\n        根据传入的数据来定位页面元素\n        :param locator: 定位语句 例如：xpath=>//*[@id='kw']\n        :return: 元素定位结果\n        '''\n        self.shot(\"定位元素\",locator)\n        try:\n>           return self.wait_util_visibility(locator)\n\ntools\\ui\\base_ui.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <po.case_report.cas_report_page.CaseReport object at 0x0000020C446FC850>\nlocator = ('xpath', \"//span[contains(text(),'案件上报')]\"), secs = 10\n\n    def wait_util_visibility(self, locator, secs=10):\n        '''\n        显示等待页面元素的出现，并返回元素对象\n        :param locator: 定位语句 例如：xpath=>//*[@id='kw']\n        :param secs: 最长等待时间\n        :return:元素对象\n        '''\n        locator = self.get_locator(locator)\n        try:\n            element = WebDriverWait(BaseUI.driver, secs).until(\n                EC.visibility_of_element_located(locator))\n            return element\n        except Exception as e:\n>           raise e\n\ntools\\ui\\base_ui.py:686: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <po.case_report.cas_report_page.CaseReport object at 0x0000020C446FC850>\nlocator = ('xpath', \"//span[contains(text(),'案件上报')]\"), secs = 10\n\n    def wait_util_visibility(self, locator, secs=10):\n        '''\n        显示等待页面元素的出现，并返回元素对象\n        :param locator: 定位语句 例如：xpath=>//*[@id='kw']\n        :param secs: 最长等待时间\n        :return:元素对象\n        '''\n        locator = self.get_locator(locator)\n        try:\n>           element = WebDriverWait(BaseUI.driver, secs).until(\n                EC.visibility_of_element_located(locator))\n\ntools\\ui\\base_ui.py:682: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bf28b848f05469224d8b88553844667f\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000020C446FCF70>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\software\\python3.85\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <tools.ui.base_ui.BaseUI object at 0x0000020C446EAEE0>\n\n    def test_CaseReport(driver):\n        # 登录-街道管理员PC端案件上报\n        user_login(\"jdadmin\", \"1234567\")\n        # 案件上报\n>       case_reported(f\"案件描述{random_tool.random_str_abc(10)}\", random_tool.random_addr())\n\ntest_case\\demo\\xiangxia_paidan\\test_verify_pass_2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npo\\case_report\\case_report.py:8: in case_reported\n    casereport.case_report()\npo\\case_report\\cas_report_page.py:49: in case_report\n    self.click(self.p_case_report)\ntools\\ui\\base_ui.py:258: in click\n    element = self.get_element(locator)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <po.case_report.cas_report_page.CaseReport object at 0x0000020C446FC850>\nlocator = \"//span[contains(text(),'案件上报')]\"\n\n    def get_element(self,locator):\n        '''\n        根据传入的数据来定位页面元素\n        :param locator: 定位语句 例如：xpath=>//*[@id='kw']\n        :return: 元素定位结果\n        '''\n        self.shot(\"定位元素\",locator)\n        try:\n            return self.wait_util_visibility(locator)\n        except TimeoutException:\n            time_out_error = \"{}定位元素超时，请检查定为语句是否正确，或者尝试其他定位方式\".format(locator)\n            log_tool.error(time_out_error)\n>           raise TimeoutException(time_out_error)\nE           selenium.common.exceptions.TimeoutException: Message: //span[contains(text(),'案件上报')]定位元素超时，请检查定为语句是否正确，或者尝试其他定位方式\n\ntools\\ui\\base_ui.py:125: TimeoutException"}, "attachments": [{"name": "log", "source": "aeb3a662-3775-45a0-add9-4c65d5d6ccd4-attachment.txt", "type": "text/plain"}], "start": 1609402147143, "stop": 1609402159622, "uuid": "5a5ad237-3a3c-469d-85d8-1379d8e96928", "historyId": "a3ffaf80fe3d25261b6ae4db3bfe846c", "fullName": "test_case.demo.xiangxia_paidan.test_verify_pass_2#test_CaseReport", "labels": [{"name": "parentSuite", "value": "test_case.demo.xiangxia_paidan"}, {"name": "suite", "value": "test_verify_pass_2"}, {"name": "subSuite"}, {"name": "host", "value": "WIN10-20201020H"}, {"name": "thread", "value": "11396-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.demo.xiangxia_paidan.test_verify_pass_2"}]}